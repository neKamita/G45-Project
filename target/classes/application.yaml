spring:
  graphql:
    graphiql:
      enabled: true
    path: /graphql
    schema:
      printer:
        enabled: true
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      max-age: 3600
    websocket:
      path: /graphql-ws

  mail:
    host: smtp.gmail.com
    port: 587
    username: nationalub@gmail.com
    password: ndfhgroydnrqzbzp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATABASE_URL:jdbc:postgresql://dpg-ctrrlibqf0us73djv36g-a.oregon-postgres.render.com:5432/g45_project}
    username: ${DATABASE_USERNAME:g45_project_user}
    password: ${DATABASE_PASSWORD:XkeRzoJ9JDKblFXb2tV8vFZG4WYyoLUV}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000

  # Consolidated cache and Redis configuration
  cache:
    type: redis
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    enabled: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true 
        order_updates: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      enabled: false
      host: ${SPRING_REDIS_HOST:redis-15073.crce175.eu-north-1-1.ec2.redns.redis-cloud.com}
      port: ${SPRING_REDIS_PORT:15073}
      password: ${SPRING_REDIS_PASSWORD:stdi3YBD24cdrO2zBd0oYrqXhl2xtWML}
      database: 0
      timeout: 2000
      client-type: lettuce
      connect-timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
      url: ${REDIS_URL}

  security:
    filter:
      order: 1
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_PASSWORD:admin}

  mvc:
    static-path-pattern: /images/**
    async:
      request-timeout: 3600000
  web:
    resources:
      static-locations: classpath:/static/,file:uploads/

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    disable-swagger-default-url: true
    urls:
      - name: Development
        url: /v3/api-docs
      - name: Production
        url: https://etadoor.koyeb.app/v3/api-docs
  servers:
    - url: http://localhost:8080
      description: Local Development Server
    - url: https://etadoor.koyeb.app
      description: Production Server
  info:
    title: Etadoor API
    version: 1.0.0
  security-scheme:
    bearer-auth:
      type: http
      scheme: bearer
      bearer-format: JWT

security:
  basic:
    enabled: true
  filter:
    order: 1
  permitted-paths:
    - /api/auth/**
    - /swagger-ui/**
    - /swagger-ui.html
    - /v3/api-docs/**
    - /webjars/**
    - /graphql/**
    - /graphiql/**
    - /subscriptions/**

server:
  port: 8080
  servlet:
    context-path: /
    session:
      timeout: 30m
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    max-threads: 200
    connection-timeout: 5000

jwt:
  expire-timeout: 86400000
  secret-key: "hbsfghbsdhbghksjdhfjkbdshbsdjkfjksdbgksfbskdjb"

logging:
  level:
    root: INFO
    uz.pdp: DEBUG
    org.springframework.security: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30
email:
  validation:
    enabled: true

aws:
  access:
    key:
      id: AKIA36E76CYUBBMMYYNG
      secret: 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
  s3:
    bucket: etadoor
  java:
    v1:
          disableDeprecationAnnouncement: true

resilience4j:
  ratelimiter:
    instances:
      verifySellerLimit:
        limitForPeriod: 5
        limitRefreshPeriod: 5m
        timeoutDuration: 0

management:
  endpoints:
    web:
      exposure:
        include: "*"
